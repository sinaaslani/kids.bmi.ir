//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Kids.EntitiesModel
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Kids_Greetings))]
    public partial class GreetingCard: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int CardId
        {
            get { return _cardId; }
            set
            {
                if (_cardId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CardId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _cardId = value;
                    OnPropertyChanged("CardId");
                }
            }
        }
        private int _cardId;
    
        [DataMember]
        public string CardName
        {
            get { return _cardName; }
            set
            {
                if (_cardName != value)
                {
                    _cardName = value;
                    OnPropertyChanged("CardName");
                }
            }
        }
        private string _cardName;
    
        [DataMember]
        public string CardSmallPic
        {
            get { return _cardSmallPic; }
            set
            {
                if (_cardSmallPic != value)
                {
                    _cardSmallPic = value;
                    OnPropertyChanged("CardSmallPic");
                }
            }
        }
        private string _cardSmallPic;
    
        [DataMember]
        public string CardPic
        {
            get { return _cardPic; }
            set
            {
                if (_cardPic != value)
                {
                    _cardPic = value;
                    OnPropertyChanged("CardPic");
                }
            }
        }
        private string _cardPic;
    
        [DataMember]
        public string CardDescription
        {
            get { return _cardDescription; }
            set
            {
                if (_cardDescription != value)
                {
                    _cardDescription = value;
                    OnPropertyChanged("CardDescription");
                }
            }
        }
        private string _cardDescription;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Kids_Greetings> Kids_Greetings
        {
            get
            {
                if (_kids_Greetings == null)
                {
                    _kids_Greetings = new TrackableCollection<Kids_Greetings>();
                    _kids_Greetings.CollectionChanged += FixupKids_Greetings;
                }
                return _kids_Greetings;
            }
            set
            {
                if (!ReferenceEquals(_kids_Greetings, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_kids_Greetings != null)
                    {
                        _kids_Greetings.CollectionChanged -= FixupKids_Greetings;
                    }
                    _kids_Greetings = value;
                    if (_kids_Greetings != null)
                    {
                        _kids_Greetings.CollectionChanged += FixupKids_Greetings;
                    }
                    OnNavigationPropertyChanged("Kids_Greetings");
                }
            }
        }
        private TrackableCollection<Kids_Greetings> _kids_Greetings;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Kids_Greetings.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupKids_Greetings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Kids_Greetings item in e.NewItems)
                {
                    item.GreetingCard = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Kids_Greetings", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Kids_Greetings item in e.OldItems)
                {
                    if (ReferenceEquals(item.GreetingCard, this))
                    {
                        item.GreetingCard = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Kids_Greetings", item);
                    }
                }
            }
        }

        #endregion
    }
}
